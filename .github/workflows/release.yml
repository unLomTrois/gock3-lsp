name: Build and Release gock3-lsp

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering
    inputs:
      bump_type:
        description: 'Select the version bump type: major, minor, patch, or none.'
        required: true
        default: 'minor'
        type: choice
        options:
          - major
          - minor
          - patch
          - none

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      # Step 3: Cache Go modules
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: go mod tidy

      # Step 5: Build binaries for all platforms
      - name: Build binaries for all platforms
        run: make build-all

      # Step 6: Bump version and push tag (only when manually triggered)
      - name: Bump version and push tag
        if: ${{ github.event_name == 'workflow_dispatch' }}
        id: bump
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: ${{ github.event.inputs.bump_type }}
          WITH_V: false

      # Step 7: Upload release assets
      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./bin/gock3-lsp-linux
            ./bin/gock3-lsp-darwin
            ./bin/gock3-lsp-windows.exe
          tag_name: ${{ github.event_name == 'workflow_dispatch' && steps.bump.outputs.new_tag || github.ref_name }}
